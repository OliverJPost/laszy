import numpy as np
from typing import Self

class PointCloud:
    @property
    def points(self) -> np.ndarray[np.float64]: ...

    @property
    def ground_points(self) -> np.ndarray[np.bool]: ...


class PointCloudBuilder:
    def from_file(self, filename: str) -> Self: ...

    def with_crop(self, lower_left: tuple[float, float], upper_right: tuple[float, float]) -> Self: ...

    def with_thinning_every_nth(self, nth: int) -> Self: ...

    def with_thinning_random(self, keep_percentage: float) -> Self: ...

    def with_csf_ground_reclassification(self) -> Self: ...

    def to_cloud(self) -> PointCloud: ...

    def to_file(self, filename: str) -> None: ...

    def to_dtm_using_csf(self, filename: str, rigidness: float, cloth_resolution: float, distance_threshold: float) -> None: ...


